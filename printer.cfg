# This file contains pin mappings for the Anycubic i3 Mega with
# Ultrabase from 2017. (This config may work on an Anycubic i3 Mega v1
# prior to the Ultrabase if you comment out the definition of the
# endstop_pin in the stepper_z1 section.) To use this config, the
# firmware should be compiled for the AVR atmega2560.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_min: -5
position_endstop: -5
position_max: 210
homing_speed: 30.0

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PL7
position_endstop: 0
position_max: 210
homing_speed: 30.0

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PD3
position_endstop: 0.0
position_min: -1
position_max: 210
homing_speed: 5.0

[stepper_z1]
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PL6

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 8.142493638676845
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
# pressure_advance: 0.232
max_extrude_cross_section: 200
min_temp: 0
max_temp: 245

[heater_fan extruder_fan]
pin: PL5

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
min_temp: 0
max_temp: 110

[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[printer]
kinematics: cartesian
max_velocity: 1000
max_accel: 4000
max_z_velocity: 7
max_z_accel: 190

[heater_fan stepstick_fan]
pin: PH4

[bltouch]
sensor_pin: ^PE4
control_pin: PB5
x_offset: 29.0
y_offset: -15.0

# [include adxl.cfg] # Comment this out when you disconnect the accelerometer

# [safe_z_home]  
# home_xy_position: 100,100  
# speed: 150  
# z_hop: 10  
# z_hop_speed: 10  

[include print_area_bed_mesh.cfg]

[bed_mesh]  
speed: 300 #200  
horizontal_move_z: 5  
mesh_min: 30,10
mesh_max: 190,170
probe_count: 6,6 
fade_start: 1.0 
fade_end: 10.0  

[virtual_sdcard]
path: /home/mayur/printer_data/gcodes

# [wled case]
# type: http
# address: 3d-printer-wled.local
# initial_red: 45
# initial_green: 45
# initial_blue: 45
# initial_white: 45
# chain_count: 60

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[display_status]

[pause_resume]

[gcode_macro G29]
gcode:
  BED_MESH_CALIBRATE
  G1 X0 Y0 Z10 F4000

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.237
#*# pid_ki = 1.130
#*# pid_kd = 129.973
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.883
#*# pid_ki = 1.835
#*# pid_kd = 763.805
#*#
#*# [bltouch]
#*# z_offset = 0.790
#*#
#*# [input_shaper]
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 45.6
#*# shaper_type_x = ei
#*# shaper_freq_x = 92.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.372500, -0.410000, -0.475000, -0.497500, -0.510000, -0.562500
#*# 	  -0.310000, -0.380000, -0.437500, -0.412500, -0.447500, -0.522500
#*# 	  -0.290000, -0.342500, -0.367500, -0.415000, -0.422500, -0.470000
#*# 	  -0.217500, -0.277500, -0.362500, -0.415000, -0.472500, -0.480000
#*# 	  -0.215000, -0.257500, -0.325000, -0.397500, -0.452500, -0.537500
#*# 	  -0.215000, -0.287500, -0.345000, -0.405000, -0.467500, -0.520000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 190.0
#*# min_y = 10.0
#*# max_y = 170.0
